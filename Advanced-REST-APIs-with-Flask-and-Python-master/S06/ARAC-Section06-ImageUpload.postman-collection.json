{
	"info": {
		"_postman_id": "cb3401e7-d89c-4864-9ae5-d3f089057285",
		"name": "ARAC-Section06-ImageUpload",
		"description": "This API is exposed by a Flask app created in the Advanced REST API Course by Teclado Ltd. The Flask app deals with online stores and its items and users.\n\n# Overview\n\nThis documentation is generated by Postman. The endpoints and its description are listed below. Some sample requests and responses are shown in the GUI on the right panel, you may select from the drop-down menu to checkout more sample requests.\n\n# Authentication\n\nThis API used JWT authentication, and some of the endpoints requires a valid JWT access token.\n\n# Configuration\n\nThis collection requires several predefined environemtn variable, which are listed below. You will need to add them to your own envirment when testing.\n\n- `url`: The root url of the Flask app. The default value should be `127.0.0.1:5000`\n- `test_email`: An email address used to test and register users in the app. It will need to be reachable by MailGun services.\n- `confirmation_id`: (optional) ConfirmationModel id. It will be set automatically by some of the request test scripts.\n- `access_token`: (optional) JWT used for login. It will be set automatically by some of the request test scripts.\n- `refresh_token`: (optional) Used for refreshing a JWT. It will be set automatically by some of the request test scripts.\n\n# Error Codes\n\n- 400: when there is a bad request\n- 401: when there is an unsuccessful authentication\n- 404: when the requested data is not found\n- 500: when something else unexpected occurs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "users",
			"item": [
				{
					"name": "register a new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"username\": \"jose\",\n\t\"email\": \"{{test_email}}\",\n\t\"password\": \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Register a new user. After a seccessful registration, a confirmation email will be sent to the user's registration email."
					},
					"response": [
						{
							"name": "register using a duplicate email",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"john\",\n\t\"email\": \"john.doe@duplicatemail.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "59",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:05:41 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"A user with that email already exists\"\n}\n"
						},
						{
							"name": "register a new user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"email\": \"john.doe@some_mail.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "48",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 15:55:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User created successfully.\"\n}\n"
						},
						{
							"name": "register using a duplicate username",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"email\": \"john.doe@somemail.com\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/register",
									"host": [
										"{{url}}"
									],
									"path": [
										"register"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "62",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:04:58 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"A user with that username already exists\"\n}\n"
						}
					]
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c0c0ed6-c206-4c88-9349-429e024e312b",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"",
									"pm.test(\"refresh token not empty\", function () {",
									"    pm.expect(jsonData.refresh_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}",
									"// set refresh token as environement variable",
									"if (jsonData.refresh_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"refresh_token\", jsonData.refresh_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"refresh_token\", null);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"1234\"\n}"
						},
						"url": {
							"raw": "{{url}}/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"login"
							]
						},
						"description": "Login using username and password. If authenticated, an active fresh `access_token` as well as a `refresh_token` will be issued."
					},
					"response": [
						{
							"name": "login successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "570",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:12:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcwOTE5NDIsIm5iZiI6MTUyNzA5MTk0MiwianRpIjoiOWUxZjQxMzUtODU0Ny00MWYzLWJkNjMtMzRiYzcyNDc1MmI0IiwiZXhwIjoxNTI3MDkyODQyLCJpZGVudGl0eSI6MSwiZnJlc2giOnRydWUsInR5cGUiOiJhY2Nlc3MifQ.ekXY9wyn50mQ2xk5smTUL10b5igKoY_placeholder\",\n    \"refresh_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcwOTE5NDIsIm5iZiI6MTUyNzA5MTk0MiwianRpIjoiYmY4YjhmZjktYjMxMC00NDJjLTg4MzAtZjU2MzdkNTU1OGE5IiwiZXhwIjoxNTI5NjgzOTQyLCJpZGVudGl0eSI6MSwidHlwZSI6InJlZnJlc2gifQ.d1D-QnRfZTgNJBrAUSJXu4J8GZ1tmD_placeholder\"\n}"
						},
						{
							"name": "login before confirming registration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "108",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:16:00 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"You have not confirmed registration, please check your email <cristiano7yl@gmail.com>.\"\n}\n"
						},
						{
							"name": "login failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"jose\",\n  \"password\" : \"12345\"\n}"
								},
								"url": {
									"raw": "{{url}}/login",
									"host": [
										"{{url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "42",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:13:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Invalid Credentials!\"\n}\n"
						}
					]
				},
				{
					"name": "logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc763e9b-e6c7-4ff3-9766-637976a5c64b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"logout"
							]
						},
						"description": "Logout a user."
					},
					"response": [
						{
							"name": "logout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/logout",
									"host": [
										"{{url}}"
									],
									"path": [
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "58",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:11 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User <id=1> successfully logged out.\"\n}\n"
						}
					]
				},
				{
					"name": "find user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4311f7d8-283e-4ba6-843b-d67de64489de",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"user confirmation found\", function () {",
									"    pm.expect(jsonData.confirmation).not.eql(undefined);",
									"});",
									"",
									"if (jsonData.confirmation !== undefined) {",
									"    pm.environment.set(\"confirmation_id\", jsonData.confirmation.id);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"1"
							]
						},
						"description": "Find a user by its id."
					},
					"response": [
						{
							"name": "user not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/2",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"2"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User not found\"\n}\n"
						},
						{
							"name": "get user by id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "242",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:31:14 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"jose\",\n    \"email\": \"cristiano7yl@gmail.com\",\n    \"confirmation\": {\n        \"id\": \"1f17df9b558a4c25ae935cc2e33ccfb7\",\n        \"expire_at\": \"1527093886\",\n        \"user_id\": 1,\n        \"confirmed\": false\n    }\n}\n"
						}
					]
				},
				{
					"name": "delete user by id",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/user/2",
							"host": [
								"{{url}}"
							],
							"path": [
								"user",
								"2"
							]
						},
						"description": "Delete a user by its id."
					},
					"response": [
						{
							"name": "delete non-existing user",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:14:08 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User not found\"\n}\n"
						},
						{
							"name": "delete user successfully",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"username\": \"jose\",\n\t\"password\": \"1234\"\n}"
								},
								"url": {
									"raw": "{{url}}/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "35",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:13:47 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"User deleted.\"\n}\n"
						}
					]
				},
				{
					"name": "confirm registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "703822c5-04cf-4085-bf99-049373d9bd23",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/user_confirm/{{confirmation_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"user_confirm",
								"{{confirmation_id}}"
							]
						},
						"description": "Confirm a user's registration."
					},
					"response": [
						{
							"name": "confirm registration",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/user_confirm/{{confirmation_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user_confirm",
										"{{confirmation_id}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "html",
							"header": [
								{
									"key": "Content-Length",
									"value": "826",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "text/html",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:10:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Registration Confirmation</title>\n    <link href=\"/static/confirmation_page.css\" rel=\"stylesheet\" type=\"text/css\">\n    <link href=\"https://fonts.googleapis.com/css?family=Lobster\" rel=\"stylesheet\" type=\"text/css\">\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\n</head>\n<body>\n\n  <div class=\"container-fluid\">\n    <div class=\"jumbotron text-center full-height\">\n      <h1>Thank You</h1>\n      <p><em>Your registration has been confirmed through < cristiano7yl@gmail.com >.</em></p>\n    </div>\n\n    <footer class=\"text-center\">\n      <hr>\n      <p>Presented by:\n        <a href=\"http://blog.tecladocode.com/\" target=\"_blank\">Teclado Ltd</a>.\n      </p>\n    </footer>\n  </div>\n\n</body>\n</html>"
						},
						{
							"name": "duplicate confirmation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/user_confirm/{{confirmation_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user_confirm",
										"{{confirmation_id}}"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "62",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Wed, 23 May 2018 16:11:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Registration has already been confirmed.\"\n}\n"
						},
						{
							"name": "confirmation expired",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/user_confirm/{{confirmation_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user_confirm",
										"{{confirmation_id}}"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "50",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:31:29 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"The link has already expired\"\n}\n"
						},
						{
							"name": "confirmation reference not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/user_confirm/{{confirmation_id}}",
									"host": [
										"{{url}}"
									],
									"path": [
										"user_confirm",
										"{{confirmation_id}}"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "54",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:30:38 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Confirmation reference not found\"\n}\n"
						}
					]
				},
				{
					"name": "refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad818ea6-8f79-436e-b756-ad878666ae9e",
								"type": "text/javascript",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"access_token not empty\", function () {",
									"    pm.expect(jsonData.access_token).not.eql(undefined);",
									"});",
									"// set access token as environement variable",
									"if (jsonData.access_token !== undefined) {",
									"    postman.setEnvironmentVariable(\"access_token\", jsonData.access_token);",
									"} else {",
									"    postman.setEnvironmentVariable(\"access_token\", null);",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{refresh_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/refresh",
							"host": [
								"{{url}}"
							],
							"path": [
								"refresh"
							]
						},
						"description": "Use the `refresh_token` to get a new active non-fresh `access_token`."
					},
					"response": [
						{
							"name": "refresh token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/refresh",
									"host": [
										"{{url}}"
									],
									"path": [
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "295",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:32:57 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1MjcxODY3NzcsIm5iZiI6MTUyNzE4Njc3NywianRpIjoiZWU3Yjc4MmYtNDIxYy00MjgxLTkzOWUtZmFlODM0ZTk1ZGIyIiwiZXhwIjoxNTI3MTg3Njc3LCJpZGVudGl0eSI6MSwiZnJlc2giOmZhbHNlLCJ0eXBlIjoiYWNjZXNzIn0.CQNpUErWpz2vJ8kbxbEXCb0qssC2ybnSxxvuPZX3khA\"\n}\n"
						},
						{
							"name": "refresh without bearer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{refresh_token}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/refresh",
									"host": [
										"{{url}}"
									],
									"path": [
										"refresh"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "44",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:33:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n  \"msg\": \"Missing Authorization Header\"\n}\n"
						}
					]
				},
				{
					"name": "get all confirmations by user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "703822c5-04cf-4085-bf99-049373d9bd23",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/confirmation/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"confirmation",
								"user",
								"1"
							]
						},
						"description": "Get a list of all confirmations of the specified user."
					},
					"response": [
						{
							"name": "get all confirmations by user id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/confirmation/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"confirmation",
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "404",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:33:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"current_time\": 1527186829,\n    \"confirmation\": [\n        {\n            \"id\": \"1f17df9b558a4c25ae935cc2e33ccfb7\",\n            \"expire_at\": \"1527093886\",\n            \"user_id\": 1,\n            \"confirmed\": false\n        },\n        {\n            \"id\": \"eef67ce47ef74397b2fc782930a20f02\",\n            \"expire_at\": \"1527188509\",\n            \"user_id\": 1,\n            \"confirmed\": true\n        }\n    ]\n}\n"
						}
					]
				},
				{
					"name": "resend confirmation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "703822c5-04cf-4085-bf99-049373d9bd23",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/confirmation/user/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"confirmation",
								"user",
								"1"
							]
						},
						"description": "Send a new confirmation email to the specified user. The previous confirmation will be revoked."
					},
					"response": [
						{
							"name": "resend confirmation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/confirmation/user/1",
									"host": [
										"{{url}}"
									],
									"path": [
										"confirmation",
										"user",
										"1"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "61",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:31:50 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Resend confirmation email successfully.\"\n}\n"
						}
					]
				}
			]
		},
		{
			"name": "items",
			"item": [
				{
					"name": "create an item",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Create a new item."
					},
					"response": [
						{
							"name": "post item by name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "76",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:34:22 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"chair\",\n    \"price\": 12.99,\n    \"store_id\": 1\n}\n"
						},
						{
							"name": "post item with duplicate name",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "61",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:35:07 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"An item with name chair already exists.\"\n}\n"
						},
						{
							"name": "post item without Bearer",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}",
										"disabled": true
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "44",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:35:25 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n  \"msg\": \"Missing Authorization Header\"\n}\n"
						},
						{
							"name": "post item with non-fresh token",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 12.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "UNAUTHORIZED",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "36",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:35:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n  \"msg\": \"Fresh token required\"\n}\n"
						}
					]
				},
				{
					"name": "find item by name",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Find an item by its name."
					},
					"response": [
						{
							"name": "get item by name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "76",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:36:09 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"chair\",\n    \"price\": 12.99,\n    \"store_id\": 1\n}\n"
						}
					]
				},
				{
					"name": "upsert an item",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"price\": 20.99,\n  \"store_id\": 1\n}"
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Create or update an item. If is update, only the item price will get updated."
					},
					"response": [
						{
							"name": "upsert an item",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 20.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "76",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:40:24 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"chair\",\n    \"price\": 20.99,\n    \"store_id\": 1\n}\n"
						},
						{
							"name": "create an item",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"price\": 2000.99,\n  \"store_id\": 1\n}"
								},
								"url": {
									"raw": "{{url}}/item/piano",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"piano"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "78",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:40:52 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 2,\n    \"name\": \"piano\",\n    \"price\": 2000.99,\n    \"store_id\": 1\n}\n"
						}
					]
				},
				{
					"name": "delete item by name",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/item/chair",
							"host": [
								"{{url}}"
							],
							"path": [
								"item",
								"chair"
							]
						},
						"description": "Delete an item by name."
					},
					"response": [
						{
							"name": "delete non-existing item",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/item/chairs",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chairs"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "37",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:38:47 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item not found.\"\n}\n"
						},
						{
							"name": "delete item by name",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/item/chair",
									"host": [
										"{{url}}"
									],
									"path": [
										"item",
										"chair"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "35",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:38:33 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Item deleted.\"\n}\n"
						}
					]
				},
				{
					"name": "get all items",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/items",
							"host": [
								"{{url}}"
							],
							"path": [
								"items"
							]
						},
						"description": "Get a list of all items."
					},
					"response": [
						{
							"name": "get all items",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\" : \"cristiano\",\n  \"password\" : \"12345678\"\n}"
								},
								"url": {
									"raw": "{{url}}/items",
									"host": [
										"{{url}}"
									],
									"path": [
										"items"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "276",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:41:27 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"items\": [\n        {\n            \"id\": 1,\n            \"name\": \"chair\",\n            \"price\": 20.99,\n            \"store_id\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"piano\",\n            \"price\": 2000.99,\n            \"store_id\": 1\n        }\n    ]\n}\n"
						}
					]
				}
			]
		},
		{
			"name": "stores",
			"item": [
				{
					"name": "create a new store",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/My Wonderful Store",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"My Wonderful Store"
							]
						},
						"description": "Create a new store."
					},
					"response": [
						{
							"name": "create a new store",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/store/My Wonderful Store",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"My Wonderful Store"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:41:38 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"My Wonderful Store\",\n    \"items\": [\n        {\n            \"id\": 1,\n            \"name\": \"chair\",\n            \"price\": 20.99,\n            \"store_id\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"piano\",\n            \"price\": 2000.99,\n            \"store_id\": 1\n        }\n    ]\n}\n"
						},
						{
							"name": "create a store with duplicate name",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/store/My Wonderful Store",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"My Wonderful Store"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "74",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:41:44 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"A store with name My Wonderful Store already exists.\"\n}\n"
						}
					]
				},
				{
					"name": "Find store by name",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/My Wonderful Store",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"My Wonderful Store"
							]
						},
						"description": "Find a store by its name."
					},
					"response": [
						{
							"name": "find non-existing store",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/store/My Wonderful Stores",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"My Wonderful Stores"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "37",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:42:12 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store not found\"\n}\n"
						},
						{
							"name": "get store by name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/store/My Wonderful Store",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"My Wonderful Store"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:42:05 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"name\": \"My Wonderful Store\",\n    \"items\": [\n        {\n            \"id\": 1,\n            \"name\": \"chair\",\n            \"price\": 20.99,\n            \"store_id\": 1\n        },\n        {\n            \"id\": 2,\n            \"name\": \"piano\",\n            \"price\": 2000.99,\n            \"store_id\": 1\n        }\n    ]\n}\n"
						}
					]
				},
				{
					"name": "delete a new store by name",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/store/My Wonderful Store",
							"host": [
								"{{url}}"
							],
							"path": [
								"store",
								"My Wonderful Store"
							]
						},
						"description": "Delete a store by its name."
					},
					"response": [
						{
							"name": "delete a new store by name",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/store/My Wonderful Store",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"My Wonderful Store"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "35",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:42:48 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store deleted\"\n}\n"
						},
						{
							"name": "delete a non-existing store",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/store/My Wonderful Store",
									"host": [
										"{{url}}"
									],
									"path": [
										"store",
										"My Wonderful Store"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "37",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:42:56 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Store not found\"\n}\n"
						}
					]
				},
				{
					"name": "get all stores",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/stores",
							"host": [
								"{{url}}"
							],
							"path": [
								"stores"
							]
						},
						"description": "Get a list of all stores, including their items."
					},
					"response": [
						{
							"name": "get all stores",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/stores",
									"host": [
										"{{url}}"
									],
									"path": [
										"stores"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "493",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Thu, 24 May 2018 18:42:38 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"stores\": [\n        {\n            \"id\": 1,\n            \"name\": \"My Wonderful Store\",\n            \"items\": [\n                {\n                    \"id\": 1,\n                    \"name\": \"chair\",\n                    \"price\": 20.99,\n                    \"store_id\": 1\n                },\n                {\n                    \"id\": 2,\n                    \"name\": \"piano\",\n                    \"price\": 2000.99,\n                    \"store_id\": 1\n                }\n            ]\n        }\n    ]\n}\n"
						}
					]
				}
			]
		},
		{
			"name": "image",
			"item": [
				{
					"name": "upload image",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/upload/image",
							"host": [
								"{{url}}"
							],
							"path": [
								"upload",
								"image"
							]
						},
						"description": "Upload an image. Only files with allowed extensions (`jpg|jpe|jpeg|png|gif|svg|bmp`) will be uploaded. Duplicate names will be resolved automatically by appending an ingeter after the name. For example, `duplicate_name.jpg` will be converted to `duplicated_name_1.jpg`."
					},
					"response": [
						{
							"name": "upload image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": null
										}
									]
								},
								"url": {
									"raw": "{{url}}/upload/image",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"image"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "48",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:06:15 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image <test.jpg> uploaded!\"\n}\n"
						},
						{
							"name": "upload duplicate image",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": null
										}
									]
								},
								"url": {
									"raw": "{{url}}/upload/image",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"image"
									]
								}
							},
							"status": "CREATED",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "50",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:49:23 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image <test_1.jpg> uploaded!\"\n}\n"
						}
					]
				},
				{
					"name": "get image",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/image/test.jpg",
							"host": [
								"{{url}}"
							],
							"path": [
								"image",
								"test.jpg"
							]
						},
						"description": "Retrieve an image. Each user can only retrieve images in his own folder."
					},
					"response": []
				},
				{
					"name": "delete image",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/image/test.jpg",
							"host": [
								"{{url}}"
							],
							"path": [
								"image",
								"test.jpg"
							]
						},
						"description": "Delete an image."
					},
					"response": [
						{
							"name": "delete an image",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/image/test.jpg",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										"test.jpg"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "47",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:50:31 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image <test.jpg> deleted!\"\n}\n"
						},
						{
							"name": "delete non-existing image",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/image/test.jpg",
									"host": [
										"{{url}}"
									],
									"path": [
										"image",
										"test.jpg"
									]
								}
							},
							"status": "NOT FOUND",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "49",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 03:55:37 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Image <test.jpg> not found!\"\n}\n"
						}
					]
				}
			]
		},
		{
			"name": "avatar",
			"item": [
				{
					"name": "upload avatar",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": ""
								}
							]
						},
						"url": {
							"raw": "{{url}}/upload/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"upload",
								"avatar"
							]
						},
						"description": "Upload a user avatar. The avatar will be named in predefined format: `user_{id}.{ext}`."
					},
					"response": [
						{
							"name": "upload an avatar without providing image",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{url}}/upload/avatar",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"avatar"
									]
								}
							},
							"status": "BAD REQUEST",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "82",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 04:00:49 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": {\n        \"image\": \"Please specify the image to upload.\"\n    }\n}\n"
						},
						{
							"name": "upload an avatar",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "image",
											"type": "file",
											"src": null
										}
									]
								},
								"url": {
									"raw": "{{url}}/upload/avatar",
									"host": [
										"{{url}}"
									],
									"path": [
										"upload",
										"avatar"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "49",
									"name": "Content-Length",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"key": "Content-Type",
									"value": "application/json",
									"name": "Content-Type",
									"description": "The mime type of this content"
								},
								{
									"key": "Date",
									"value": "Fri, 25 May 2018 04:00:30 GMT",
									"name": "Date",
									"description": "The date and time that the message was sent"
								},
								{
									"key": "Server",
									"value": "Werkzeug/0.14.1 Python/3.6.1",
									"name": "Server",
									"description": "A name for the server"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Avatar user_1.jpg uploaded!\"\n}\n"
						}
					]
				},
				{
					"name": "get avatar",
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/avatar/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"avatar",
								"1"
							]
						},
						"description": "Retrieve a user avatar by user id."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e46eeb9a-a866-43bd-a696-a41334b3a97f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "43f785c7-bf37-4fb9-8d30-60f97919657d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "2352618f-25f0-402f-ae25-9b0b2a8e3351",
			"key": "url",
			"value": "127.0.0.1:5000",
			"type": "string"
		},
		{
			"id": "3a240b3b-ca80-4dc5-a956-0bc93d067f25",
			"key": "test_email",
			"value": "john.doe@some_mail.com",
			"type": "string"
		}
	]
}